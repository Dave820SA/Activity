//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SAPDActivityModel", "FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_ActivityCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GrantReportingBusinessLayer.ActivityCategory), "Grant_DailyActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GrantReportingBusinessLayer.DailyActivity), true)]

#endregion

namespace GrantReportingBusinessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GrantReportingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GrantReportingEntities object using the connection string found in the 'GrantReportingEntities' section of the application configuration file.
        /// </summary>
        public GrantReportingEntities() : base("name=GrantReportingEntities", "GrantReportingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GrantReportingEntities object.
        /// </summary>
        public GrantReportingEntities(string connectionString) : base(connectionString, "GrantReportingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GrantReportingEntities object.
        /// </summary>
        public GrantReportingEntities(EntityConnection connection) : base(connection, "GrantReportingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityCategory> ActivityCategories
        {
            get
            {
                if ((_ActivityCategories == null))
                {
                    _ActivityCategories = base.CreateObjectSet<ActivityCategory>("ActivityCategories");
                }
                return _ActivityCategories;
            }
        }
        private ObjectSet<ActivityCategory> _ActivityCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DailyActivity> DailyActivities
        {
            get
            {
                if ((_DailyActivities == null))
                {
                    _DailyActivities = base.CreateObjectSet<DailyActivity>("DailyActivities");
                }
                return _DailyActivities;
            }
        }
        private ObjectSet<DailyActivity> _DailyActivities;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityCategories(ActivityCategory activityCategory)
        {
            base.AddObject("ActivityCategories", activityCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DailyActivities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDailyActivities(DailyActivity dailyActivity)
        {
            base.AddObject("DailyActivities", dailyActivity);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAPDActivityModel", Name="ActivityCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityCategory object.
        /// </summary>
        /// <param name="activityID">Initial value of the ActivityID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ActivityCategory CreateActivityCategory(global::System.Int32 activityID, global::System.String name)
        {
            ActivityCategory activityCategory = new ActivityCategory();
            activityCategory.ActivityID = activityID;
            activityCategory.Name = name;
            return activityCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityID
        {
            get
            {
                return _ActivityID;
            }
            set
            {
                if (_ActivityID != value)
                {
                    OnActivityIDChanging(value);
                    ReportPropertyChanging("ActivityID");
                    _ActivityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityID");
                    OnActivityIDChanged();
                }
            }
        }
        private global::System.Int32 _ActivityID;
        partial void OnActivityIDChanging(global::System.Int32 value);
        partial void OnActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAPDActivityModel", "FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_DailyActivity")]
        public EntityCollection<DailyActivity> Grant_DailyActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DailyActivity>("SAPDActivityModel.FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_DailyActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DailyActivity>("SAPDActivityModel.FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_DailyActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAPDActivityModel", Name="DailyActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DailyActivity object.
        /// </summary>
        /// <param name="adminActivityID">Initial value of the AdminActivityID property.</param>
        /// <param name="appEntityID">Initial value of the AppEntityID property.</param>
        /// <param name="activityID">Initial value of the ActivityID property.</param>
        /// <param name="activityStart">Initial value of the ActivityStart property.</param>
        /// <param name="activityEnd">Initial value of the ActivityEnd property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        public static DailyActivity CreateDailyActivity(global::System.Int32 adminActivityID, global::System.Int32 appEntityID, global::System.Int32 activityID, global::System.DateTime activityStart, global::System.DateTime activityEnd, global::System.String notes)
        {
            DailyActivity dailyActivity = new DailyActivity();
            dailyActivity.AdminActivityID = adminActivityID;
            dailyActivity.AppEntityID = appEntityID;
            dailyActivity.ActivityID = activityID;
            dailyActivity.ActivityStart = activityStart;
            dailyActivity.ActivityEnd = activityEnd;
            dailyActivity.Notes = notes;
            return dailyActivity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdminActivityID
        {
            get
            {
                return _AdminActivityID;
            }
            set
            {
                if (_AdminActivityID != value)
                {
                    OnAdminActivityIDChanging(value);
                    ReportPropertyChanging("AdminActivityID");
                    _AdminActivityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdminActivityID");
                    OnAdminActivityIDChanged();
                }
            }
        }
        private global::System.Int32 _AdminActivityID;
        partial void OnAdminActivityIDChanging(global::System.Int32 value);
        partial void OnAdminActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppEntityID
        {
            get
            {
                return _AppEntityID;
            }
            set
            {
                OnAppEntityIDChanging(value);
                ReportPropertyChanging("AppEntityID");
                _AppEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppEntityID");
                OnAppEntityIDChanged();
            }
        }
        private global::System.Int32 _AppEntityID;
        partial void OnAppEntityIDChanging(global::System.Int32 value);
        partial void OnAppEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityID
        {
            get
            {
                return _ActivityID;
            }
            set
            {
                OnActivityIDChanging(value);
                ReportPropertyChanging("ActivityID");
                _ActivityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityID");
                OnActivityIDChanged();
            }
        }
        private global::System.Int32 _ActivityID;
        partial void OnActivityIDChanging(global::System.Int32 value);
        partial void OnActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActivityStart
        {
            get
            {
                return _ActivityStart;
            }
            set
            {
                OnActivityStartChanging(value);
                ReportPropertyChanging("ActivityStart");
                _ActivityStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityStart");
                OnActivityStartChanged();
            }
        }
        private global::System.DateTime _ActivityStart;
        partial void OnActivityStartChanging(global::System.DateTime value);
        partial void OnActivityStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActivityEnd
        {
            get
            {
                return _ActivityEnd;
            }
            set
            {
                OnActivityEndChanging(value);
                ReportPropertyChanging("ActivityEnd");
                _ActivityEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityEnd");
                OnActivityEndChanged();
            }
        }
        private global::System.DateTime _ActivityEnd;
        partial void OnActivityEndChanging(global::System.DateTime value);
        partial void OnActivityEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EnteredDate
        {
            get
            {
                return _EnteredDate;
            }
            set
            {
                OnEnteredDateChanging(value);
                ReportPropertyChanging("EnteredDate");
                _EnteredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnteredDate");
                OnEnteredDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EnteredDate;
        partial void OnEnteredDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnteredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ApprovedFlag
        {
            get
            {
                return _ApprovedFlag;
            }
            set
            {
                OnApprovedFlagChanging(value);
                ReportPropertyChanging("ApprovedFlag");
                _ApprovedFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedFlag");
                OnApprovedFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _ApprovedFlag;
        partial void OnApprovedFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnApprovedFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MoreInformationFlag
        {
            get
            {
                return _MoreInformationFlag;
            }
            set
            {
                OnMoreInformationFlagChanging(value);
                ReportPropertyChanging("MoreInformationFlag");
                _MoreInformationFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoreInformationFlag");
                OnMoreInformationFlagChanged();
            }
        }
        private Nullable<global::System.Boolean> _MoreInformationFlag;
        partial void OnMoreInformationFlagChanging(Nullable<global::System.Boolean> value);
        partial void OnMoreInformationFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovedByID
        {
            get
            {
                return _ApprovedByID;
            }
            set
            {
                OnApprovedByIDChanging(value);
                ReportPropertyChanging("ApprovedByID");
                _ApprovedByID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedByID");
                OnApprovedByIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovedByID;
        partial void OnApprovedByIDChanging(Nullable<global::System.Int32> value);
        partial void OnApprovedByIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovedDate
        {
            get
            {
                return _ApprovedDate;
            }
            set
            {
                OnApprovedDateChanging(value);
                ReportPropertyChanging("ApprovedDate");
                _ApprovedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedDate");
                OnApprovedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovedDate;
        partial void OnApprovedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAPDActivityModel", "FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_ActivityCategory")]
        public ActivityCategory Grant_ActivityCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityCategory>("SAPDActivityModel.FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_ActivityCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityCategory>("SAPDActivityModel.FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_ActivityCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActivityCategory> Grant_ActivityCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityCategory>("SAPDActivityModel.FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_ActivityCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActivityCategory>("SAPDActivityModel.FK_Grant_DailyActivity_Grant_ActivityCategory", "Grant_ActivityCategory", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
