@model SOPBusinessLayer.DocHistory

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

  
    <form class="form-horizontal">
    <div class="Container">
        <div class="row">
            <div class="col-lg-6 col-lg-offset-1 col-md-6 col-sm-6 col-xs-12">
                <fieldset class="scheduler-border">
                    <div class="form-group col-xs-11 col-md-8">
                        <strong style="font-size:1.2em">@Html.LabelFor(model => model.SOPID, new { @class = "control-label" })</strong>
                        @Html.DropDownList("SOPID", null, "Select SOP", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOPID, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-lg-11 col-xs-11 col-md-8 ">
                        <strong style="font-size: 1.2em">@Html.LabelFor(model => model.DocPath, new { @class = "control-label" })</strong>
                        @*@Html.TextBoxFor(model => model.DocPath, new { type = "file", single = "true", @class = "form-control" })*@
                        @Html.TextBoxFor(model => model.DocPath, new { Value = Request.QueryString["value1"], @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DocPath, "", new { @class = "text-danger" })
                    </div>

                     @*<div class="form-group col-lg-11 col-xs-11 col-md-8 ">
                        <strong style="font-size:1.2em">@Html.LabelFor(model => model.DocPath, new { @class = "control-label" })</strong>
                        @Html.TextBoxFor(model => model.DocPath, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DocPath, "", new { @class = "text-danger" })
                     </div>*@

                    <div class="form-group col-xs-11 col-md-8">
                        <strong style="font-size:1.2em">@Html.LabelFor(model => model.DocInfo, new { @class = "control-label" })</strong>
                        @Html.TextAreaFor(model => model.DocInfo, new { @class = "form-control", cols = "20", rows = "7" })
                        @Html.ValidationMessageFor(model => model.DocInfo, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-xs-11 col-md-8">
                        <strong style="font-size: 1.2em">@Html.LabelFor(model => model.StartDate, new { @class = "control-label" })</strong>
                        @Html.TextBoxFor(model => model.StartDate, new {@Value = @DateTime.Now.ToShortDateString(), @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-xs-11 col-md-8">
                        <strong style="font-size: 1.2em">@Html.LabelFor(model => model.ModifiedDate, new { @class = "control-label" })</strong>
                        @Html.TextBoxFor(model => model.ModifiedDate, new { @Value = @DateTime.Now.ToString(), @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group col-xs-11 col-md-8">
                        <input type="submit" class="btn btn-primary" value="Create" />
                    </div>
                    <p>
                    </p>
                </fieldset>
                <div>
                    <strong style="font-size: 1.5em">| @Html.ActionLink("Back to List", "Index")</strong>
                </div>
            </div>
        </div>
    </div>
    </form>


}


@section Scripts {

   <script type="text/javascript">
//       $(document).ready(function () {

//       });
    </script>
           @* @Scripts.Render("~/bundles/jqueryval")*@

}
