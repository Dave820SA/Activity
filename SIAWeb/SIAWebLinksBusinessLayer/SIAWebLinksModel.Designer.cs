//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SIAWebLinksModel", "FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SIAWebLinksBusinessLayer.WebCategories), "SIA_WebLinks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SIAWebLinksBusinessLayer.WebLinks), true)]

#endregion

namespace SIAWebLinksBusinessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WebLinksEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WebLinksEntities object using the connection string found in the 'WebLinksEntities' section of the application configuration file.
        /// </summary>
        public WebLinksEntities() : base("name=WebLinksEntities", "WebLinksEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WebLinksEntities object.
        /// </summary>
        public WebLinksEntities(string connectionString) : base(connectionString, "WebLinksEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WebLinksEntities object.
        /// </summary>
        public WebLinksEntities(EntityConnection connection) : base(connection, "WebLinksEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebCategories> WebCategories
        {
            get
            {
                if ((_WebCategories == null))
                {
                    _WebCategories = base.CreateObjectSet<WebCategories>("WebCategories");
                }
                return _WebCategories;
            }
        }
        private ObjectSet<WebCategories> _WebCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebLinks> WebLinks
        {
            get
            {
                if ((_WebLinks == null))
                {
                    _WebLinks = base.CreateObjectSet<WebLinks>("WebLinks");
                }
                return _WebLinks;
            }
        }
        private ObjectSet<WebLinks> _WebLinks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebCategories(WebCategories webCategories)
        {
            base.AddObject("WebCategories", webCategories);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebLinks(WebLinks webLinks)
        {
            base.AddObject("WebLinks", webLinks);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<spGetAllSIAWebLinks_Result> spGetAllSIAWebLinks()
        {
            return base.ExecuteFunction<spGetAllSIAWebLinks_Result>("spGetAllSIAWebLinks");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SIAWebLinksModel", Name="WebCategories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebCategories : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebCategories object.
        /// </summary>
        /// <param name="webCategoriesID">Initial value of the WebCategoriesID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static WebCategories CreateWebCategories(global::System.Int32 webCategoriesID, global::System.String name)
        {
            WebCategories webCategories = new WebCategories();
            webCategories.WebCategoriesID = webCategoriesID;
            webCategories.Name = name;
            return webCategories;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebCategoriesID
        {
            get
            {
                return _WebCategoriesID;
            }
            set
            {
                if (_WebCategoriesID != value)
                {
                    OnWebCategoriesIDChanging(value);
                    ReportPropertyChanging("WebCategoriesID");
                    _WebCategoriesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WebCategoriesID");
                    OnWebCategoriesIDChanged();
                }
            }
        }
        private global::System.Int32 _WebCategoriesID;
        partial void OnWebCategoriesIDChanging(global::System.Int32 value);
        partial void OnWebCategoriesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SIAWebLinksModel", "FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebLinks")]
        public EntityCollection<WebLinks> SIA_WebLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebLinks>("SIAWebLinksModel.FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebLinks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebLinks>("SIAWebLinksModel.FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebLinks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SIAWebLinksModel", Name="WebLinks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebLinks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebLinks object.
        /// </summary>
        /// <param name="webLinkID">Initial value of the WebLinkID property.</param>
        /// <param name="webCategoryID">Initial value of the WebCategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="webLink">Initial value of the WebLink property.</param>
        /// <param name="visibleFlag">Initial value of the VisibleFlag property.</param>
        /// <param name="needAuthorizationFlag">Initial value of the NeedAuthorizationFlag property.</param>
        public static WebLinks CreateWebLinks(global::System.Int32 webLinkID, global::System.Int32 webCategoryID, global::System.String name, global::System.String webLink, global::System.Boolean visibleFlag, global::System.Boolean needAuthorizationFlag)
        {
            WebLinks webLinks = new WebLinks();
            webLinks.WebLinkID = webLinkID;
            webLinks.WebCategoryID = webCategoryID;
            webLinks.Name = name;
            webLinks.WebLink = webLink;
            webLinks.VisibleFlag = visibleFlag;
            webLinks.NeedAuthorizationFlag = needAuthorizationFlag;
            return webLinks;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebLinkID
        {
            get
            {
                return _WebLinkID;
            }
            set
            {
                if (_WebLinkID != value)
                {
                    OnWebLinkIDChanging(value);
                    ReportPropertyChanging("WebLinkID");
                    _WebLinkID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WebLinkID");
                    OnWebLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _WebLinkID;
        partial void OnWebLinkIDChanging(global::System.Int32 value);
        partial void OnWebLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WebCategoryID
        {
            get
            {
                return _WebCategoryID;
            }
            set
            {
                OnWebCategoryIDChanging(value);
                ReportPropertyChanging("WebCategoryID");
                _WebCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WebCategoryID");
                OnWebCategoryIDChanged();
            }
        }
        private global::System.Int32 _WebCategoryID;
        partial void OnWebCategoryIDChanging(global::System.Int32 value);
        partial void OnWebCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WebLink
        {
            get
            {
                return _WebLink;
            }
            set
            {
                OnWebLinkChanging(value);
                ReportPropertyChanging("WebLink");
                _WebLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WebLink");
                OnWebLinkChanged();
            }
        }
        private global::System.String _WebLink;
        partial void OnWebLinkChanging(global::System.String value);
        partial void OnWebLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VisibleFlag
        {
            get
            {
                return _VisibleFlag;
            }
            set
            {
                OnVisibleFlagChanging(value);
                ReportPropertyChanging("VisibleFlag");
                _VisibleFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibleFlag");
                OnVisibleFlagChanged();
            }
        }
        private global::System.Boolean _VisibleFlag;
        partial void OnVisibleFlagChanging(global::System.Boolean value);
        partial void OnVisibleFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedAuthorizationFlag
        {
            get
            {
                return _NeedAuthorizationFlag;
            }
            set
            {
                OnNeedAuthorizationFlagChanging(value);
                ReportPropertyChanging("NeedAuthorizationFlag");
                _NeedAuthorizationFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedAuthorizationFlag");
                OnNeedAuthorizationFlagChanged();
            }
        }
        private global::System.Boolean _NeedAuthorizationFlag;
        partial void OnNeedAuthorizationFlagChanging(global::System.Boolean value);
        partial void OnNeedAuthorizationFlagChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SIAWebLinksModel", "FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebCategories")]
        public WebCategories SIA_WebCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebCategories>("SIAWebLinksModel.FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebCategories>("SIAWebLinksModel.FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WebCategories> SIA_WebCategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WebCategories>("SIAWebLinksModel.FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WebCategories>("SIAWebLinksModel.FK_SIA_WebLinks_SIA_WebCategories", "SIA_WebCategories", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="SIAWebLinksModel", Name="spGetAllSIAWebLinks_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class spGetAllSIAWebLinks_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spGetAllSIAWebLinks_Result object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="webLink">Initial value of the WebLink property.</param>
        public static spGetAllSIAWebLinks_Result CreatespGetAllSIAWebLinks_Result(global::System.Int32 id, global::System.String name, global::System.String webLink)
        {
            spGetAllSIAWebLinks_Result spGetAllSIAWebLinks_Result = new spGetAllSIAWebLinks_Result();
            spGetAllSIAWebLinks_Result.ID = id;
            spGetAllSIAWebLinks_Result.Name = name;
            spGetAllSIAWebLinks_Result.WebLink = webLink;
            return spGetAllSIAWebLinks_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WebLink
        {
            get
            {
                return _WebLink;
            }
            set
            {
                OnWebLinkChanging(value);
                ReportPropertyChanging("WebLink");
                _WebLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WebLink");
                OnWebLinkChanged();
            }
        }
        private global::System.String _WebLink;
        partial void OnWebLinkChanging(global::System.String value);
        partial void OnWebLinkChanged();

        #endregion

    }

    #endregion

    
}
